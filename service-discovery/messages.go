package servicediscovery

// Code generated by avro/gen. DO NOT EDIT.

import (
	"github.com/hamba/avro/v2"
)

// ServiceInquiry is a generated struct.
type ServiceInquiry struct {
	ServiceType string `avro:"serviceType" json:"serviceType"`
	InstanceID  string `avro:"instanceId" json:"instanceId"`
}

var schemaServiceInquiry = avro.MustParse(`{"name":"seraph.servicediscovery.ServiceInquiry","type":"record","fields":[{"name":"serviceType","type":"string"},{"name":"instanceId","type":"string"}]}`)

// Schema returns the schema for ServiceInquiry.
func (o *ServiceInquiry) Schema() avro.Schema {
	return schemaServiceInquiry
}

// Unmarshal decodes b into the receiver.
func (o *ServiceInquiry) Unmarshal(b []byte) error {
	return avro.Unmarshal(o.Schema(), b, o)
}

// Marshal encodes the receiver.
func (o *ServiceInquiry) Marshal() ([]byte, error) {
	return avro.Marshal(o.Schema(), o)
}

// ServiceAnnouncement is a generated struct.
type ServiceAnnouncement struct {
	AnnouncementType  string            `avro:"announcementType" json:"announcementType"`
	ServiceType       string            `avro:"serviceType" json:"serviceType"`
	InstanceID        string            `avro:"instanceId" json:"instanceId"`
	HeartbeatInterval int               `avro:"heartbeatInterval" json:"heartbeatInterval"`
	Properties        map[string]string `avro:"properties" json:"properties"`
}

var schemaServiceAnnouncement = avro.MustParse(`{"name":"seraph.servicediscovery.ServiceAnnouncement","type":"record","fields":[{"name":"announcementType","type":{"name":"seraph.servicediscovery.AnnouncementType","type":"enum","symbols":["ANNOUNCE","REMOVE"]}},{"name":"serviceType","type":"string"},{"name":"instanceId","type":"string"},{"name":"heartbeatInterval","type":"int"},{"name":"properties","type":{"type":"map","values":"string"}}]}`)

// Schema returns the schema for ServiceAnnouncement.
func (o *ServiceAnnouncement) Schema() avro.Schema {
	return schemaServiceAnnouncement
}

// Unmarshal decodes b into the receiver.
func (o *ServiceAnnouncement) Unmarshal(b []byte) error {
	return avro.Unmarshal(o.Schema(), b, o)
}

// Marshal encodes the receiver.
func (o *ServiceAnnouncement) Marshal() ([]byte, error) {
	return avro.Marshal(o.Schema(), o)
}

// ServiceHeartbeat is a generated struct.
type ServiceHeartbeat struct {
	InstanceID string `avro:"instanceId" json:"instanceId"`
}

var schemaServiceHeartbeat = avro.MustParse(`{"name":"seraph.servicediscovery.ServiceHeartbeat","type":"record","fields":[{"name":"instanceId","type":"string"}]}`)

// Schema returns the schema for ServiceHeartbeat.
func (o *ServiceHeartbeat) Schema() avro.Schema {
	return schemaServiceHeartbeat
}

// Unmarshal decodes b into the receiver.
func (o *ServiceHeartbeat) Unmarshal(b []byte) error {
	return avro.Unmarshal(o.Schema(), b, o)
}

// Marshal encodes the receiver.
func (o *ServiceHeartbeat) Marshal() ([]byte, error) {
	return avro.Marshal(o.Schema(), o)
}
